//Lab Exe 3

//QUESTION 1
#include<iostream>
using namespace std;

bool isPassing(int);

int main()
{
	int score;
	bool result;
	cout << "Enter the student's test score: ";
	cin >> score;
	result = isPassing(score);
	if (result)
		cout << "The student passed the test.";
	else cout << "The student failed the test.";
	return 0;
}

bool isPassing(int score)
{
	if (score >= 50)
		return true;
	else return false;
}

//QUESTION 2
#include<iostream>
#include<iomanip>
using namespace std;

int main()
{
	const int SIZE = 5;
	double price[SIZE];
	double total, average, highest;
	cout << "Enter the prices of 5 items: " << endl;
	cin >> price[0];
	cin >> price[1];
	cin >> price[2];
	cin >> price[3];
	cin >> price[4];
	total = price[0] + price[1] + price[2] + price[3] + price[4];
	cout << "Total price: RM" << total << endl;
	average = total / SIZE;
	cout << "Average price: RM" << average << endl;
	highest = price[0];
	for (int count = 1;count < SIZE;count++)
	{
		if (price[count] > highest)
			highest = price[count];
	}
	cout << setprecision(1) << fixed;
	cout << "Highest price: RM" << highest;
	return 0;
}

//QUESTION 3
#include<iostream>
using namespace std;

int main()
{
	const int STUDENTS = 2, SUBJECTS = 3;
	int marks[STUDENTS][SUBJECTS];
	int total[STUDENTS] = { 0 };
	//Input marks for each student
	cout << "Enter marks for 2 students (3 subjects each): " << endl;
	for (int i = 0;i < STUDENTS;i++)
	{
		cout << "Student " << i + 1 << ": " << endl;
		for (int j = 0;j < SUBJECTS;j++)
		{
			cin >> marks[i][j];
			total[i] += marks[i][j];
		}
	}

	//Display marks in tabular format
	cout << "\nMarks Table: " << endl;
	cout << "Student\tMath\tEnglish\tScience\tTotal" << endl;
	for (int i = 0;i < STUDENTS;i++)
	{
		cout << i + 1 << "\t";
		for (int j = 0;j < SUBJECTS;j++)
		{
			cout << marks[i][j] << "\t";
		}
		cout << total[i] << endl;
	}
	return 0;
}

//QUESTION 4
#include<iostream>
using namespace std;

const int PRODUCTS = 2, REGIONS = 3; 

int totalSales(int[][REGIONS],int ProductNo);
int findMaxRegion(int[][REGIONS],int);

int main()
{
	int sales[PRODUCTS][REGIONS] = { 0 };
	int total[PRODUCTS] = { 0 };
	int highestRegion[PRODUCTS] = { 0 };
	cout << "Enter sales data for 2 products across 3 regions:" << endl;
	for (int i = 0;i < PRODUCTS;i++)
	{
		cout << "Product " << i + 1 << " ï¼š" << endl;
		for (int j = 0;j < REGIONS;j++)
		{
			cout << "Region " << j + 1 << " : ";
			cin >> sales[i][j];
		}
		cout << endl;
	}

	for (int i = 0;i < PRODUCTS;i++)
	{
		total[i] = totalSales(sales, i);
		highestRegion[i] = findMaxRegion(sales, i);
	}

	for (int i = 0;i < PRODUCTS;i++)
	{
		cout << "Product " << i + 1 << " :" << endl;
		cout << "Total sales : RM" << total[i] << endl;
		cout << "Region with highest sales: Region " << highestRegion [i] + 1 << " (Sales: RM" << sales[i][highestRegion[i]] << ") " << endl << endl;
	}
		return 0;
}

int totalSales(int sales[][REGIONS],int ProductNo)
{
	int total= 0;
	for (int j = 0;j < REGIONS;j++)
		{
			total += sales[ProductNo][j];
		}
	return total;
}

int findMaxRegion(int sales[][REGIONS],int ProductNo)
{
	int highest=0;
	int highestRegion;
	for (int j = 0;j < REGIONS;j++)
		{
			if (sales[ProductNo][j] > highest)
			{
				highest = sales[ProductNo][j];
				highestRegion = j ;
			}
		}
	return highestRegion;
}